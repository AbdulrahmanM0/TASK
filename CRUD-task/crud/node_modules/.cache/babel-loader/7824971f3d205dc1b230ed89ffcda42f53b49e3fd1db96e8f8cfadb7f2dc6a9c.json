{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nconst sendReports = createAsyncThunk('reports/sendReports', async (arg, thunkAPI) => {\n  const {\n    rejectWithValue,\n    getState\n  } = thunkAPI;\n  try {\n    const res = await fetch('http://localhost:3001/reports', {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json; charset=UTF-8'\n      },\n      body: JSON.stringify(arg)\n    });\n  } catch (error) {\n    return rejectWithValue(error.message);\n  }\n});\nconst initialState = {};\nconst reports = createSlice({\n  name: 'reports',\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(sendReports.pending, (state, action) => {\n      console.log(action);\n    }).addCase(sendReports.fulfilled, (state, action) => {\n      console.log(action);\n    }).addCase(sendReports.rejected, (state, action) => {\n      console.log(action);\n    });\n  }\n});\nexport default reports.reducer;\nexport const reportsActions = reports.actions;","map":{"version":3,"names":["createSlice","createAsyncThunk","sendReports","arg","thunkAPI","rejectWithValue","getState","res","fetch","method","headers","body","JSON","stringify","error","message","initialState","reports","name","reducers","extraReducers","builder","addCase","pending","state","action","console","log","fulfilled","rejected","reducer","reportsActions","actions"],"sources":["F:/Fron-task/CRUD-task/crud/src/DataCenter/DataCenter.js"],"sourcesContent":["import { createSlice , createAsyncThunk } from \"@reduxjs/toolkit\";\r\n\r\nconst sendReports = createAsyncThunk('reports/sendReports',async (arg,thunkAPI)=>{\r\n    const {rejectWithValue , getState} = thunkAPI;\r\n    try{\r\n        const res = await fetch('http://localhost:3001/reports',{\r\n            method: 'POST',\r\n            headers:{\r\n                'Content-type':'application/json; charset=UTF-8'\r\n            },\r\n            body: JSON.stringify(arg)\r\n        })\r\n    }catch(error){ return rejectWithValue(error.message)}\r\n\r\n})\r\n\r\nconst initialState={\r\n\r\n}\r\n\r\nconst reports = createSlice({\r\n    name:'reports',\r\n    initialState,\r\n    reducers:{},\r\n    extraReducers: (builder)=>{\r\n        builder\r\n        .addCase(sendReports.pending , (state,action)=>{\r\n            console.log(action)\r\n        })\r\n        .addCase(sendReports.fulfilled , (state,action)=>{\r\n            console.log(action)\r\n        })\r\n        .addCase(sendReports.rejected,(state,action)=>{\r\n            console.log(action)\r\n        })\r\n    }\r\n\r\n});\r\n\r\nexport default  reports.reducer;\r\nexport const reportsActions = reports.actions;"],"mappings":"AAAA,SAASA,WAAW,EAAGC,gBAAgB,QAAQ,kBAAkB;AAEjE,MAAMC,WAAW,GAAGD,gBAAgB,CAAC,qBAAqB,EAAC,OAAOE,GAAG,EAACC,QAAQ,KAAG;EAC7E,MAAM;IAACC,eAAe;IAAGC;EAAQ,CAAC,GAAGF,QAAQ;EAC7C,IAAG;IACC,MAAMG,GAAG,GAAG,MAAMC,KAAK,CAAC,+BAA+B,EAAC;MACpDC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAC;QACJ,cAAc,EAAC;MACnB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACV,GAAG;IAC5B,CAAC,CAAC;EACN,CAAC,QAAMW,KAAK,EAAC;IAAE,OAAOT,eAAe,CAACS,KAAK,CAACC,OAAO,CAAC;EAAA;AAExD,CAAC,CAAC;AAEF,MAAMC,YAAY,GAAC,CAEnB,CAAC;AAED,MAAMC,OAAO,GAAGjB,WAAW,CAAC;EACxBkB,IAAI,EAAC,SAAS;EACdF,YAAY;EACZG,QAAQ,EAAC,CAAC,CAAC;EACXC,aAAa,EAAGC,OAAO,IAAG;IACtBA,OAAO,CACNC,OAAO,CAACpB,WAAW,CAACqB,OAAO,EAAG,CAACC,KAAK,EAACC,MAAM,KAAG;MAC3CC,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC;IACvB,CAAC,CAAC,CACDH,OAAO,CAACpB,WAAW,CAAC0B,SAAS,EAAG,CAACJ,KAAK,EAACC,MAAM,KAAG;MAC7CC,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC;IACvB,CAAC,CAAC,CACDH,OAAO,CAACpB,WAAW,CAAC2B,QAAQ,EAAC,CAACL,KAAK,EAACC,MAAM,KAAG;MAC1CC,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC;IACvB,CAAC,CAAC;EACN;AAEJ,CAAC,CAAC;AAEF,eAAgBR,OAAO,CAACa,OAAO;AAC/B,OAAO,MAAMC,cAAc,GAAGd,OAAO,CAACe,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}