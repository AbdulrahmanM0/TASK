[{"F:\\Fron-task\\form-task\\src\\index.js":"1","F:\\Fron-task\\form-task\\src\\reportWebVitals.js":"2","F:\\Fron-task\\form-task\\src\\App.js":"3","F:\\Fron-task\\form-task\\src\\components\\Header\\Header.js":"4","F:\\Fron-task\\form-task\\src\\components\\MainSection\\Main_section.js":"5","F:\\Fron-task\\form-task\\src\\components\\MainSection\\SignInButton.js":"6","F:\\Fron-task\\form-task\\src\\components\\AddUserForm\\AddUserSection.js":"7","F:\\Fron-task\\form-task\\src\\components\\AddUserForm\\FormCard.js":"8","F:\\Fron-task\\form-task\\src\\components\\AddUserForm\\Form.js":"9","F:\\Fron-task\\form-task\\src\\components\\AddUserForm\\SubmitAlert.js":"10"},{"size":233,"mtime":1687188461574,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":1687179478094,"results":"13","hashOfConfig":"12"},{"size":336,"mtime":1687191324234,"results":"14","hashOfConfig":"12"},{"size":2687,"mtime":1687259397375,"results":"15","hashOfConfig":"12"},{"size":446,"mtime":1687207810054,"results":"16","hashOfConfig":"12"},{"size":605,"mtime":1687253699944,"results":"17","hashOfConfig":"12"},{"size":295,"mtime":1687253104787,"results":"18","hashOfConfig":"12"},{"size":274,"mtime":1687254690421,"results":"19","hashOfConfig":"12"},{"size":3668,"mtime":1687260310285,"results":"20","hashOfConfig":"12"},{"size":414,"mtime":1687255696861,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},"w4waih",{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},"F:\\Fron-task\\form-task\\src\\index.js",[],[],[],"F:\\Fron-task\\form-task\\src\\reportWebVitals.js",[],[],"F:\\Fron-task\\form-task\\src\\App.js",[],[],"F:\\Fron-task\\form-task\\src\\components\\Header\\Header.js",[],[],"F:\\Fron-task\\form-task\\src\\components\\MainSection\\Main_section.js",[],[],"F:\\Fron-task\\form-task\\src\\components\\MainSection\\SignInButton.js",[],[],"F:\\Fron-task\\form-task\\src\\components\\AddUserForm\\AddUserSection.js",[],[],"F:\\Fron-task\\form-task\\src\\components\\AddUserForm\\FormCard.js",[],[],"F:\\Fron-task\\form-task\\src\\components\\AddUserForm\\Form.js",["54","55","56"],[],"import { Formik, Field, Form } from 'formik';\r\nimport Button from '@mui/material/Button';\r\nimport SendIcon from '@mui/icons-material/Send';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport defaultUserImg from '../Assets/Images/illustration-of-human-icon-user-symbol-icon-modern-design-on-blank-background-free-vector.webp';\r\nimport { useRef , useEffect , useState} from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction FormComponent() {\r\n  const [ userData , setUserData ] = useState([]);\r\n  const userPic = useRef(null);\r\n  \r\n\r\n\r\n  useEffect(()=>{\r\n    const getData = axios.get('http://localhost:3001/users').then(res=>setUserData(res.data));\r\n  },[userData]);\r\n\r\n  const handleSubmit = (values) => {\r\n    const check = userData.some((data) => data.email === values.email);\r\n    const warn = document.getElementById('warning');\r\n    const succ = document.getElementById('succeded');\r\n  \r\n    if (!check) {\r\n      axios.post('http://localhost:3001/users', values);\r\n      succ.classList.add('active');\r\n      succ.classList.remove('unactive');\r\n      values.email = '';\r\n      values.password = '';\r\n      values.firstName = '';\r\n      values.lastName = '';\r\n      values.userImg = '';\r\n      warn.classList.remove('active');\r\n      warn.classList.add('unactive');\r\n    } else {\r\n      values.email = '';\r\n      values.password = '';\r\n      warn.classList.add('active');\r\n      warn.classList.remove('unactive');\r\n    }\r\n    console.log(check);\r\n  };\r\n  \r\n\r\n  const handleCancel = () => {\r\n    document.getElementById('addUserBanar').classList.add('addUserBanar_unactive');\r\n    document.getElementById('addUserBanar').classList.remove('addUserBanar');\r\n  }\r\n\r\n  const handleUserImg = (e, setFieldValue) => {\r\n    const file = e.target.files[0];\r\n    const imgUrl = URL.createObjectURL(file);\r\n    setFieldValue('userImg', imgUrl);\r\n    userPic.current.src = imgUrl;\r\n    console.log(userPic.current);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Formik\r\n        initialValues={{\r\n          firstName: '',\r\n          lastName: '',\r\n          email: '',\r\n          password: '',\r\n          userImg: '',\r\n        }}\r\n        onSubmit={handleSubmit}\r\n      >\r\n        {({ setFieldValue }) => (\r\n          <Form>\r\n            <Row>\r\n              <Field id='firstName' name='firstName' placeholder='First Name' required/>\r\n\r\n              <Field id='lastName' name='lastName' placeholder='Last Name' required/>\r\n\r\n              <Field id='email' name='email' placeholder='E-mail' type='email' required/>\r\n\r\n              <Field id='password' name='password' placeholder='Password' type='password' required/>\r\n\r\n              <Col className='userImgForm'>\r\n                <img ref={userPic} src={defaultUserImg} className='defaultUserImg' />\r\n                <input\r\n                  id='userImg'\r\n                  name='userImg'\r\n                  type='file'\r\n                  accept='image/jpeg, image/png, image/jpg'\r\n                  onChange={(e) => handleUserImg(e, setFieldValue)}\r\n                 \r\n                />\r\n              </Col>\r\n\r\n              <div className='formButtons'>\r\n                <Button className='formBtn' type='submit' variant='contained' endIcon={<SendIcon />}>\r\n                  Send\r\n                </Button>\r\n                <Button className='formBtn' variant='outlined' startIcon={<CloseIcon />} onClick={()=>handleCancel()} >\r\n                  Close\r\n                </Button>\r\n              </div>\r\n            </Row>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default FormComponent;\r\n","F:\\Fron-task\\form-task\\src\\components\\AddUserForm\\SubmitAlert.js",[],[],{"ruleId":"57","severity":1,"message":"58","line":5,"column":8,"nodeType":"59","messageId":"60","endLine":5,"endColumn":18},{"ruleId":"57","severity":1,"message":"61","line":18,"column":11,"nodeType":"59","messageId":"60","endLine":18,"endColumn":18},{"ruleId":"62","severity":1,"message":"63","line":84,"column":17,"nodeType":"64","endLine":84,"endColumn":86},"no-unused-vars","'DeleteIcon' is defined but never used.","Identifier","unusedVar","'getData' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement"]